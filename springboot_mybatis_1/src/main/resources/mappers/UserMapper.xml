<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace是mybatis映射文件的唯一标识,与接口对应-->
<mapper namespace="com.jt.mapper.UserMapper">
    <!--id 与接口方法对应
        resultType 返回值结果类型 返回的POJO对象类型
    -->
    <select id="findAll" resultType="com.jt.pojo.User">
        select *
        from demo_user
    </select>
    <!--
        根据id查询数据库
        动态取值: #{key}
    -->
    <select id="findById" resultType="com.jt.pojo.User">
        select *
        from demo_user
        where id = #{id}
    </select>

    <!--根据name和age查询
        (!) 别名包 在配置文件中，指定包路径：
        可以自动实现包路径的拼接
        (resultType规则) 首先会根据别名包匹配，如果匹配不
        成功则按照原路径匹配
        (参数传递规则) 如果是单个的参数，则使用#{key}取值。 获取的是参数的值
        如果对象参数，则使用#{属性} 获取的是属性值
    -->
    <select id="findUserByNA" resultType="User">
        select *
        from demo_user
        where name = #{name}
          and age = #{age}
    </select>
    <!--
        根据年龄范围查询数据：
        语法: 如果传递的参数是Map 则使用#{key}
        xml转义字符： &gt;  >
                    &lt;  <
                    &amp; &
                    万能转义字符 <![CDATA[转义内容]]>
    -->
    <select id="findUserByAge" resultType="User">
        select *
        from demo_user
        where age > #{minAge}
          and age &lt; #{maxAge}

    </select>

    <select id="findUserByAge2" resultType="User">
        <![CDATA[
        select *
        from demo_user
        where age > #{minAge}
          and age < #{maxAge}
        ]]>
    </select>
    <!--模糊查询 特别注意表名的大小写问题
        windows系统中：不区分大小写
        Linux系统中：区分大小写
        所以需要和数据库表面名字要一模一样

        %拼接 使用 "%"#{name}"%"拼接
        -->
    <select id="findUserByLike" resultType="User">
        select
        <include refid="tableColumn"/>
        from demo_user where name like #{name}
    </select>

    <!--SQL标签：抽取公共的SQL语句-->
    <sql id="tableColumn">
        id,name,age,sex
    </sql>

    <!--
    mybatis的遍历的写法
        foreach:
            (!) collection 需要遍历的集合
                (+) 数组                  关键字 array/list
                (+) list集合              关键字 list
                (+) Map<key,array/list>  关键字 key
        open/close 循环体的开始和结束 可以写道循环之外
        item 当前遍历数据的变量
        separator 分割符
    -->
    <select id="FindListByIn" resultType="User">
        select * from demo_user where id in (

        <foreach collection="array" item="id" separator=",">

            #{id}

        </foreach>

        )
    </select>

    <select id="saveUser">
        insert into demo_user (id, name, age, sex) value (null, #{name}, #{age}, #{sex})
    </select>

</mapper>
